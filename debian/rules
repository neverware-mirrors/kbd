#!/usr/bin/make -f

TOPDIR = $(shell pwd)
KBD = $(TOPDIR)/debian/kbd
KBD_UDEB = $(TOPDIR)/debian/kbd-udeb

UDEB_BINARIES = loadkeys kbd_mode setfont
EXTRA_BINARIES = screendump setlogcons setvesablank
CONTRIB_BINARIES = codepage splitfont vcstime

MOVE_TO_BIN = kbd_mode setfont fgconsole openvt chvt dumpkeys unicode_start loadkeys
MOVE_TO_SBIN = kbdrate
MOVE_TO_USR_SBIN = vcstime setvesablank

RETAIN = src/loadkeys.c src/analyze.c po/Makefile.in po/cat-id-tbl.c

configure: configure-stamp
configure-stamp:
	dh_testdir
	for ITEM in $(RETAIN); do cp $$ITEM $$ITEM.keep; done
	dh_quilt_patch
	aclocal
	automake --add-missing
	autoconf
	./configure --prefix=/usr --datadir=/usr/share --mandir=/usr/share/man \
		--enable-nls
	touch $@

build: build-stamp
build-stamp: configure-stamp
	dh_testdir
	cd src/ && flex -o analyze.c analyze.l
	rm -f src/loadkeys.c
	$(MAKE) -C src/ CFLAGS="-Os -g" $(UDEB_BINARIES)
	cd src/ && for ITEM in $(UDEB_BINARIES); do mv $$ITEM $$ITEM-udeb; done
	$(MAKE) -C src/ clean
	$(MAKE)
	$(MAKE) -C src/ $(EXTRA_BINARIES)
	$(MAKE) CFLAGS="-O2 -g" -C contrib/ $(CONTRIB_BINARIES)
	touch $@
	dh build --after dh_auto_build

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	[ ! -f Makefile ] || $(MAKE) distclean
	rm -f aclocal.m4 depcomp configure
	cd src/ && rm -f $(EXTRA_BINARIES) *-udeb
	cd contrib/ && rm -f $(CONTRIB_BINARIES)
	find -name Makefile.in -exec rm {} \;
	dh clean --with=quilt
	for ITEM in $(RETAIN); do [ ! -f $$ITEM.keep ] || mv $$ITEM.keep $$ITEM; done

install: build-stamp
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
# the kbd “core”
	$(MAKE) DESTDIR=$(KBD) install-exec
	$(MAKE) DESTDIR=$(KBD) -C po/ install
	$(MAKE) DESTDIR=$(KBD) -C man/ install
# some additional utilities
	install -m755 $(addprefix src/,$(EXTRA_BINARIES)) $(KBD)/usr/bin/
	install -m755 $(addprefix contrib/,$(CONTRIB_BINARIES)) $(KBD)/usr/bin/
	install -m755 data/keymaps/i386/mk_modmap $(KBD)/usr/bin
# move everything where it belongs
	mv $(addprefix debian/kbd/usr/bin/,$(MOVE_TO_BIN)) $(KBD)/bin/
	mv $(addprefix debian/kbd/usr/bin/,$(MOVE_TO_SBIN)) $(KBD)/sbin/
	mv $(addprefix debian/kbd/usr/bin/,$(MOVE_TO_USR_SBIN)) $(KBD)/usr/sbin/
# configuration files
	install -m644 debian/conffiles.d/* $(KBD)/etc/kbd/
# prepare udeb
	for ITEM in $(UDEB_BINARIES); do install -m755 src/$$ITEM-udeb $(KBD_UDEB)/bin/$$ITEM; done
# and the rest
	dh install --after dh_install --before dh_installinit
	dh_installinit --init-script=console-screen.kbd.sh -r -u"start 48 S ."
	dh install --after dh_installinit

binary-indep:
# Nothing to be done

binary-arch: install
	dh binary-arch --until dh_installdocs
# remove the docs shipped in doc-linux-{text,html}
	rm -f $(KBD)/usr/share/doc/kbd/kbd.FAQ*
	dh binary-arch --after dh_installdocs

binary: binary-arch

TOPGIT_PATCHES = \
	fixes/auto_convert fixes/compile_on_sparc fixes/install_exec \
	fixes/man_kbd_mode fixes/openvt_error_handling \
	fixes/showconsolefont_spaces fixes/splitfont_manpage \
	fixes/unicode_start_breaks_X

tg-export:
	rm -rf debian/patches
	tg export -b "`echo $(TOPGIT_PATCHES) | tr ' ' ','`" --quilt debian/patches

.PHONY: configure build clean binary-arch binary-indep binary tg-export
